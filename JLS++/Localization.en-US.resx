<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="alreadyRunning" xml:space="preserve">
    <value>JLS++ is already running. Please use tray icon.</value>
  </data>
  <data name="browcfg" xml:space="preserve">
    <value>Browser Configuration</value>
  </data>
  <data name="browExplain" xml:space="preserve">
    <value>These configuration make browser to pretend like you are not using headless browser.
Please set if you need. Incorrect setting make program to run unexpectedly.</value>
  </data>
  <data name="browserSetting" xml:space="preserve">
    <value>Browser Setting</value>
  </data>
  <data name="cacheExplain" xml:space="preserve">
    <value>This will enable cache data to show you the homework more quickly
Web transfer will be not performed if cache data is available.</value>
  </data>
  <data name="cachePrio" xml:space="preserve">
    <value>Give cache priority :</value>
  </data>
  <data name="cacheSetting" xml:space="preserve">
    <value>Cache Data Setting</value>
  </data>
  <data name="crawlSetting" xml:space="preserve">
    <value>Crawling Setting</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date : </value>
  </data>
  <data name="dbExplain" xml:space="preserve">
    <value>All data which are handled by JLS++ are saved in database
You can customize database setting here.</value>
  </data>
  <data name="dbSetting" xml:space="preserve">
    <value>Datebase Setting</value>
  </data>
  <data name="delCache" xml:space="preserve">
    <value>Clear cache</value>
  </data>
  <data name="delCacheExplain" xml:space="preserve">
    <value>Delete all cache data which contains past homework</value>
  </data>
  <data name="exit" xml:space="preserve">
    <value>Quit JLS++</value>
  </data>
  <data name="explain" xml:space="preserve">
    <value>JLS++ will help you to check homework of JLS
I hope this will be an assistance of study.</value>
  </data>
  <data name="failure:1" xml:space="preserve">
    <value>&lt;font size="4" color="red"&gt;&lt;b&gt;Login Failure&lt;/b&gt;&lt;br /&gt;Please set your profile first.&lt;/font&gt;</value>
  </data>
  <data name="failure:2" xml:space="preserve">
    <value>&lt;font size="4" color="red"&gt;&lt;b&gt;Login Failure&lt;/b&gt;&lt;br /&gt;Check your ID and password&lt;/font&gt;</value>
  </data>
  <data name="failure:3" xml:space="preserve">
    <value>&lt;font size="4" color="red"&gt;&lt;b&gt;Cannot check homework&lt;/b&gt;&lt;br /&gt;Check if you entered invalid date. Or JLS server is not available temporally&lt;/font&gt;</value>
  </data>
  <data name="failure:4" xml:space="preserve">
    <value>&lt;font size="4"&gt;&lt;b&gt;No homework found&lt;/b&gt;&lt;br /&gt; Please check date you entered&lt;/font&gt;</value>
  </data>
  <data name="failure:5" xml:space="preserve">
    <value>&lt;font size="4" color="red"&gt;&lt;b&gt;No homework found&lt;/b&gt;&lt;br /&gt;Homework of that date is not available&lt;/font&gt;</value>
  </data>
  <data name="fakenotavl" xml:space="preserve">
    <value>Fake plugin is currently not available.</value>
  </data>
  <data name="fakeplugin" xml:space="preserve">
    <value>Enable fake plugins : </value>
  </data>
  <data name="getOnStart" xml:space="preserve">
    <value>Get homework on web on start :</value>
  </data>
  <data name="gpu_acc" xml:space="preserve">
    <value>GPU acceleration : </value>
  </data>
  <data name="greeting" xml:space="preserve">
    <value>Welcome to JLS++</value>
  </data>
  <data name="hws" xml:space="preserve">
    <value>Homework</value>
  </data>
  <data name="id" xml:space="preserve">
    <value>ID : </value>
  </data>
  <data name="lang" xml:space="preserve">
    <value>Language : </value>
  </data>
  <data name="langExp" xml:space="preserve">
    <value>This will be applied not only browser default language but also program language.</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name : </value>
  </data>
  <data name="open" xml:space="preserve">
    <value>Open JLS++</value>
  </data>
  <data name="profSetting" xml:space="preserve">
    <value>Profile Setting</value>
  </data>
  <data name="pwd" xml:space="preserve">
    <value>Password : </value>
  </data>
  <data name="recon" xml:space="preserve">
    <value>Reconnect</value>
  </data>
  <data name="refres" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="reset" xml:space="preserve">
    <value>Reset All Setting</value>
  </data>
  <data name="resetAlert" xml:space="preserve">
    <value>Profile, cache and all data will be deleted and never be recovered
Sure?</value>
  </data>
  <data name="resProg" xml:space="preserve">
    <value>Restart program to apply settings</value>
  </data>
  <data name="savpath" xml:space="preserve">
    <value>Saving Path : </value>
  </data>
  <data name="secExplain" xml:space="preserve">
    <value>JLS++ treats your privacy with care.
All these privacies will be saved in device, and never send to other computer except for login.</value>
  </data>
  <data name="setProf" xml:space="preserve">
    <value>Set Profile!</value>
  </data>
  <data name="settedProfile" xml:space="preserve">
    <value>Hello </value>
  </data>
  <data name="setting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="shwWin" xml:space="preserve">
    <value>Show window : </value>
  </data>
  <data name="storageSetting" xml:space="preserve">
    <value>Storage Setting</value>
  </data>
  <data name="unlad" xml:space="preserve">
    <value>Didn't load yet</value>
  </data>
  <data name="usr_agent" xml:space="preserve">
    <value>User Agent : </value>
  </data>
</root>